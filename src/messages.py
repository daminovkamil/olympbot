from aiogram.utils.formatting import Text, Bold, TextLink, CustomEmoji
from sitedb.queries import activity_data
from datetime import date

ERROR_MESSAGE_PT = "–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞(( –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É"
ERROR_MESSAGE_MD = Text(ERROR_MESSAGE_PT).as_markdown()

ERROR_TRY_AGAIN_PT = "–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å( –ü–æ–ø—Ä–æ–±—É–π—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–∑–∂–µ"

FUNCTION_TEMPORARILY_NOT_AVAILABLE_MD = Text("–§—É–Ω–∫—Ü–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞((").as_markdown()

BUTTON_DOWNLOAD_PT = "–ó–∞–≥—Ä—É–∑–∫–∞"
BUTTON_SHOW_TEXT_PT = "–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—Å—Ç"
BUTTON_HIDE_TEXT_PT = "–°–∫—Ä—ã—Ç—å —Ç–µ–∫—Å—Ç"
BUTTON_POST_PAGE_PT = "–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–æ–≤–æ—Å—Ç–∏"

CMD_START_1_MD = Text("–ü—Ä–∏–≤–µ—Ç! üëã").as_markdown()
CMD_START_2_MD = Text("–û –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö –±–æ—Ç–∞ –≤—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É ", Bold("¬´–ú–µ–Ω—é¬ª"), ".").as_markdown()

EVENTS_TURNED_OFF_MD = Text(Bold("–£ –≤–∞c –Ω–µ —Å—Ç–æ–∏—Ç –≥–∞–ª–æ—á–∫–∞ –æ–∫–æ–ª–æ –ø—É–Ω–∫—Ç–∞ ¬´–ü—Ä–∏—Å—ã–ª–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è¬ª –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö!"), " –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, —Ç–æ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–ù–∞—Å—Ç—Ä–æ–π–∫–∏¬ª –æ–∫–æ–ª–æ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã.").as_markdown()
EVENTS_ACTIVITIES_NOT_CHOSEN_MD = Text(Bold("–í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ –Ω–∏–∫–∞–∫–∏—Ö –æ–ª–∏–º–ø–∏–∞–¥!"), " –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, —Ç–æ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–ù–∞—Å—Ç—Ä–æ–π–∫–∏¬ª –æ–∫–æ–ª–æ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã.").as_markdown()
EVENTS_EMPTY_MD = Text("–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –Ω–∏–∫–∞–∫–∏—Ö —Å–æ–±—ã—Ç–∏–π(").as_markdown()
EVENTS_YOURS_EVENTS_BELOW_MD = Text("–ù–∏–∂–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã —Ç–µ–∫—É—â–∏–µ —Å–æ–±—ã—Ç–∏—è –≤–∞—à–∏—Ö –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –æ–ª–∏–º–ø–∏–∞–¥").as_markdown()


async def event_text(event):
    def days_word(count):
        if count == 1:
            return "–ó–∞–≤—Ç—Ä–∞"
        if count == 0:
            return "–°–µ–≥–æ–¥–Ω—è"
        if count % 10 == 1 and count % 100 != 11:
            return "–ß–µ—Ä–µ–∑ %s –¥–µ–Ω—å" % count
        if count % 10 in [2, 3, 4] and count % 100 not in [12, 13, 14]:
            return "–ß–µ—Ä–µ–∑ %s –¥–Ω—è" % count
        return "–ß–µ—Ä–µ–∑ %s –¥–Ω–µ–π" % count

    activity_id = event.activity_id

    event_name = event.name
    event_name = event_name[0].lower() + event_name[1:]

    activity_name = activity_data[activity_id]["name"]

    today = date.today()

    weekdays = ['–≤ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', '–≤–æ –≤—Ç–æ—Ä–Ω–∏–∫', '–≤ —Å—Ä–µ–¥—É', '–≤ —á–µ—Ç–≤–µ—Ä–≥', '–≤ –ø—è—Ç–Ω–∏—Ü—É', '–≤ —Å—É–±–±–æ—Ç—É', '–≤ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ']
    weekdays_second = ['–¥–æ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞', '–¥–æ –≤—Ç–æ—Ä–Ω–∏–∫–∞', '–¥–æ —Å—Ä–µ–¥—ã', '–¥–æ —á–µ—Ç–≤–µ—Ä–≥–∞', '–¥–æ –ø—è—Ç–Ω–∏—Ü—ã', '–¥–æ —Å—É–±–±–æ—Ç—ã',
                       '–¥–æ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å—è']

    text = None

    if event.first_date is not None and event.first_date > today:

        if event.second_date is None:
            days = (event.first_date - today).days
            weekday = weekdays[event.first_date.weekday()]
            full_date = event.first_date.strftime("%d.%m.%Y")
            text = Text(
                "‚ÄºÔ∏è ",
                Bold(days_word(days)),
                " –±—É–¥–µ—Ç ",
                event_name,
                ", —Ç–æ—á–Ω–µ–µ ",
                Bold(
                    weekday,
                    " ",
                    full_date,
                ),
                ".\n\n",
                TextLink(activity_name, url="https://olimpiada.ru/activity/%s" % activity_id)
            ).as_markdown()
        else:
            days = (event.first_date - today).days
            weekday = weekdays[event.first_date.weekday()]
            full_date = event.first_date.strftime("%d.%m.%Y")
            text = Text(
                "‚ÄºÔ∏è ",
                Bold(days_word(days)),
                " –Ω–∞—á–Ω–µ—Ç—Å—è ",
                event_name,
                ", —Ç–æ—á–Ω–µ–µ ",
                Bold(
                    weekday,
                    " ",
                    full_date,
                ),
                ".\n\n",
                "–ë—É–¥–µ—Ç –ø—Ä–æ–≤–æ–¥–∏—Ç—å—Å—è ",
                Bold(
                    weekdays_second[event.second_date.weekday()],
                    " ",
                    event.second_date.strftime("%d.%m.%Y")
                ),
                ".\n\n",
                TextLink(activity_name, url="https://olimpiada.ru/activity/%s" % activity_id)
            ).as_markdown()

    elif event.second_date is not None and event.second_date > today:
        days = (event.second_date - today).days
        weekday = weekdays[event.second_date.weekday()]
        full_date = event.second_date.strftime('%d.%m.%Y')
        text = Text(
            "‚ÄºÔ∏è ",
            Bold(days_word(days)),
            " –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è ",
            event_name,
            ", —Ç–æ—á–Ω–µ–µ ",
            Bold(
                weekday,
                " ",
                full_date
            ),
            ".\n\n",
            TextLink(activity_name, url="https://olimpiada.ru/activity/%s" % activity_id)
        ).as_markdown()

    return text
